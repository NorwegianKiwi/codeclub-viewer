//////////////////////////////////////////////
// The code below was originally copied from
// codeclub_lesson_builder/styles/main.less
// and
// codeclub_lesson_builder/styles/lesson.less
//////////////////////////////////////////////
@import '../../../node_modules/highlight.js/styles/idea';
@import '../../styles/variables';
@import '../../../node_modules/bootstrap-sass/assets/stylesheets/bootstrap/mixins';
@import '../../../node_modules/bootstrap-sass/assets/stylesheets/bootstrap/tables';

// NOTE: .container should only contain "general" styling, i.e. not class names (but e.g. tags).
//       If there is a need to use class names, consider creating separate React components,
//       and add them via htmlToReact.js
.container {
  ul {
    padding: 0;
    margin: 0 0 20px;

    > li::before { // Show blue circle
      content: " ";
      border-radius: 20px;
      border: 3px solid $checkbox-blue;
      padding: 8px;
      float: left;
      margin-left: -40px;
      margin-top: 2px;
    }
    > li {
      list-style: none;
      padding-top: 10px;
      padding-bottom: 10px;
      margin-left: 45px;
    }
  }

  ol {
    > li {
      padding-top: 10px;
      padding-bottom: 10px;
    }
  }

  ul ul,
  ul ol,
  ol ul,
  ol ol {
    margin: 0; // Remove margins for nested lists
  }

  // code blocks
  pre > code {
    // override hljs background
    background-color: transparent;
  }

  //TODO: How to deal with det various "code .blockXXX"? A ScratchCodeComponent? Or add it to the ScratchBlocks component?
  // manual colors for scratch code
  // example: Press `motion`{.blockmotion} ...
  code {
    &.blockmotion {
      background-color: #505fd7;
    }
    &.blocklooks {
      background-color: #9b33d9;
    }
    &.blocksound {
      background-color: #d000c2;
    }
    &.blockpen {
      background-color: #00a16f;
    }
    &.blockdata {
      background-color: #ff7500;
    }
    &.blockevents {
      background-color: #d38117;
    }
    &.blockcontrol {
      background-color: #e9aa00;
    }
    &.blocksensing {
      background-color: #00a3e6;
    }
    &.blockoperators {
      background-color: #00c114;
    }
    &.blockmoreblocks {
      background-color: #71009a;
    }

    &.blockmotion,
    &.blocklooks,
    &.blocksound,
    &.blockpen,
    &.blockdata,
    &.blockevents,
    &.blockcontrol,
    &.blocksensing,
    &.blockoperators,
    &.blockmoreblocks {
      color: #fff;
    }
  }

  //// tables
  table {
    // add table class to all tables, assumes that tables are only used
    // for listing stuff and is not in use for other components like calendars
    @extend .table;
  }

  // horisontal scroll on screens, do not wrap
  // not keyword negate _whole_ media query,
  // making `(not print) and (min-width: @screen-sm)` impossible
  @media aural, braille, handheld, projection, screen, tty, tv, embossed {
    pre > code {
      word-wrap: normal;
      white-space: pre;
    }
  }

  // TODO: Have a separate VideoContainer component?
  // embedded videos
  .video-container {
    position: relative;
    padding-bottom: 56.25%; // 16:9
    height: 0;
    overflow: hidden;
    margin: 30px 0 60px;
    iframe {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
}
